//============================================================================
// Distributed under the MIT License. Author: Adrian Derstroff
//============================================================================

#version 430

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

// Struct for atom
struct AtomStruct
{
    vec3  center;
    float radius;
    float atomSymbolIndex;
    float bondNeighborsStart;
    float bondNeighborsSize;
    float proteinID;
    vec4  charge;
};

// SSBOs
layout(std430, binding = 0) buffer AtomsBuffer     { AtomStruct atom[]; };
layout(std430, binding = 1) buffer PositionsBuffer { vec4 pos[];   };

layout(std430, binding = 2) restrict readonly buffer ModelMatrixBuffer { mat4 modelMatrix[]; };

uniform int pnum;

void main() {
    // get particle index
    uint i = gl_GlobalInvocationID.x;
    if (i >= pnum) return;

    AtomStruct a = atom[i];
    pos[i] = modelMatrix[int(a.proteinID)] * vec4(a.center, 1.0);
}
