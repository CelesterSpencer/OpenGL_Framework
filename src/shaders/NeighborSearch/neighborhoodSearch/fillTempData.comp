//============================================================================
// Distributed under the MIT License. Author: Adrian Derstroff
//============================================================================

#version 430

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

// SSBOs
layout(std430, binding = 0) buffer PositionsBuffer       { vec4 pos[];       };
layout(std430, binding = 1) buffer GridcellsBuffer       { uint gcell[];     };
layout(std430, binding = 2) buffer GridindicesBuffer     { uint gndx[];      };

layout(std430, binding = 3) buffer TempPositionsBuffer   { vec4 tempPos[];   };
layout(std430, binding = 4) buffer TempGridcellsBuffer   { uint tempGcell[]; };
layout(std430, binding = 5) buffer TempGridindicesBuffer { uint tempGndx[];  };

uniform int pnum;

void main() {
    // get particle index
    int i = int(gl_GlobalInvocationID.x);
    if (i >= pnum) return;

    // copy data from original buffers to temporary buffers
    tempPos[i]   = pos[i] ;
    tempGcell[i] = gcell[i];
    tempGndx[i]  = gndx[i];
}
